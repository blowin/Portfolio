<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>xUnit on Сущевский Дмитрий</title><link>https://blowin.github.io/blog/tags/xunit/</link><description>Recent content in xUnit on Сущевский Дмитрий</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Sun, 09 Oct 2022 22:18:41 +0400</lastBuildDate><atom:link href="https://blowin.github.io/blog/tags/xunit/index.xml" rel="self" type="application/rss+xml"/><item><title>Unit testing</title><link>https://blowin.github.io/blog/posts/2022/10/unit-testing/</link><pubDate>Sun, 09 Oct 2022 22:18:41 +0400</pubDate><guid>https://blowin.github.io/blog/posts/2022/10/unit-testing/</guid><description>Количество дураков уменьшается, но качество их растет.
Михаил Генин
Цель Цель статьи - показать как можно решить проблему при написании юнит тестов, когда в коде есть зависимости на внешний ресурс (база данных/сеть/файловая система). Поэтому постарался сделать её более практической.
Введение Для начала разберемся что же такое unit тестирование. Cогласно википедии:
Модульное тестирование, иногда блочное тестирование или юнит-тестирование (англ. unit testing) — процесс в программировании, позволяющий проверить на корректность отдельные модули исходного кода программы, наборы из одного или более программных модулей вместе с соответствующими управляющими данными, процедурами использования и обработки.</description></item></channel></rss>